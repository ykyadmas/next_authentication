// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              String    @id @default(cuid())
  firstName       String
  lastName        String
  email           String?   @unique
  password        String
  confirmPassword String
  emailVerified   DateTime?
  role            Role      @default(USER)
  image           String?
  accounts        Account[]
  sessions        Session[]
  // proposal Proposal[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Proposal {
  id        Int    @id @default(autoincrement())
  firstName String
  lastName  String
  //Proposer Address
  woreda    String
  kebele    String
  phoneNo   String

  //Occupation
  occupation String
  //period of Insurance
  startDate  String
  endDate    String

  model        String
  proposedDate String
  branch       String
  status       Status   @default(IN_PROGRESS)
  createdAt    DateTime @default(now())
  // user   User   @relation(fields: [userId], references: [id])
  // userId String @unique
}

enum Status {
  APPROVED
  IN_PROGRESS
  CANCELLED
}

enum Role {
  USER
  ADMIN
}

model Message {
  id           Int    @id @default(autoincrement())
  emailMessage String
  subject      String
  sentMessage      String
}
